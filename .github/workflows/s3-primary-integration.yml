name: S3 primary storage
on:
  pull_request:
  push:
    branches:
      - master
      - stable*

jobs:
  s3-primary-tests-minio:
    runs-on: ubuntu-latest

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['8.0']
        key: ['objectstore', 'objectstore_multibucket']

    name: php${{ matrix.php-versions }}-${{ matrix.key }}-minio

    services:
      redis:
        image: redis
        ports:
          - "6379:6379"
      minio:
        image: bitnami/minio
        ports:
          - "9000:9000"

    steps:
      - name: Checkout server
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit
          extensions: mbstring, fileinfo, intl, sqlite, pdo_sqlite, zip, gd

      - name: Wait for S3
        run: |
          sleep 10
          curl -f -m 1 --retry-connrefused --retry 10 --retry-delay 10 http://localhost:9000/minio/health/ready
          sleep 10
          curl -f -m 1 --retry-connrefused --retry 10 --retry-delay 10 http://localhost:9000/minio/health/ready

      - name: Set up Nextcloud
        run: |
          mkdir data
          echo '<?php $CONFIG=["${{ matrix.key }}" => ["class" => "OC\Files\ObjectStore\S3", "arguments" => ["bucket" => "nextcloud", "autocreate" => true, "key" => "minioadmin", "secret" => "minioadmin", "hostname" => "localhost", "port" => 9000, "use_ssl" => false, "use_path_style" => true, "uploadPartSize" => 52428800]]];' > config/config.php
          echo '<?php $CONFIG=["redis" => ["host" => "localhost", "port" => 6379], "memcache.local" => "\OC\Memcache\Redis"];' > config/redis.config.php
          ./occ maintenance:install --verbose --database=sqlite --database-name=nextcloud --database-host=127.0.0.1 --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin
          php -f index.php

      - name: Integration
        run: |
          cd build/integration
          bash run.sh --tags "~@failure-s3" features/webdav-related.feature

      - name: PHPUnit
        working-directory: tests
        run: phpunit --configuration phpunit-autotest.xml --group DB,SLOWDB
      - name: S3 logs
        if: always()
        run: |
          cat data/nextcloud.log
          docker ps -a
          docker ps -aq | while read container ; do IMAGE=$(docker inspect --format='{{.Config.Image}}' $container); echo $IMAGE; docker logs $container; echo "\n\n" ; done


  s3-primary-summary:
    runs-on: ubuntu-latest
    needs: [s3-primary-tests-minio]

    if: always()

    steps:
      - name: Summary status
        run: if ${{ needs.s3-primary-tests-minio.result != 'success' }}; then exit 1; fi
